┌─────────────────────────────────────────────────────────────────────────────┐
│                         LED MATRIX LIBRARY STRUCTURE                        │
└─────────────────────────────────────────────────────────────────────────────┘

PROJEKT LEDMatrix/
│
├── 📄 LEDMatrix.h                    [Plik nagłówkowy biblioteki]
│   ├── Definicje protokołu
│   ├── Deklaracja klasy LEDMatrix
│   ├── Publiczne API
│   └── Stałe i definicje
│
├── 📄 LEDMatrix.cpp                  [Implementacja biblioteki]
│   ├── Konstruktor i inicjalizacja
│   ├── Funkcje wysyłania pakietów
│   ├── Obliczanie sumy kontrolnej
│   ├── Debug i logowanie
│   └── Obsługa protokołu
│
├── 📄 README.md                      [Pełna dokumentacja]
│   ├── Opis biblioteki
│   ├── API Reference
│   ├── Przykłady użycia
│   ├── Rozwiązywanie problemów
│   └── Licencja
│
├── 📄 INSTALLATION.md                [Przewodnik instalacji]
│   ├── Metoda 1: Jako biblioteka
│   ├── Metoda 2: Standalone
│   ├── Konfiguracja sprzętowa
│   └── Rozwiązywanie problemów
│
├── 📄 QUICKSTART.md                  [Szybki start]
│   ├── Instalacja w 5 minut
│   ├── Podstawowe funkcje
│   ├── Przykłady
│   └── Następne kroki
│
└── 📁 examples/                      [Przykłady użycia]
    │
    ├── 📁 TestLEDMatrix/
    │   └── 📄 TestLEDMatrix.ino     [Pełny test biblioteki]
    │       ├── 8 scenariuszy testowych
    │       ├── Demonstracja wszystkich funkcji
    │       └── Idealny do nauki
    │
    ├── 📁 SimpleDemo/
    │   └── 📄 SimpleDemo.ino        [Prosty przykład]
    │       ├── Animacja kolorów
    │       ├── Zmiana tekstu
    │       └── Idealny do szybkiego startu
    │
    └── 📁 AdvancedDemo/
        └── 📄 AdvancedDemo.ino      [Zaawansowany przykład]
            ├── Różne rozmiary czcionek
            ├── Dynamiczna zmiana jasności
            ├── Animacja tekstu
            └── Stany programu


┌─────────────────────────────────────────────────────────────────────────────┐
│                           PROTOCOL STRUCTURE                                │
└─────────────────────────────────────────────────────────────────────────────┘

┌──────┬─────────┬──────────┬──────────────┬──────────────┬───────────┬──────┐
│ SOF  │ ScreenID│ Command  │ PayloadLength│   Payload    │ Checksum  │ EOF  │
│ 0xAA │   1B    │   1B     │     1B       │   0-150B     │    1B     │ 0x55 │
└──────┴─────────┴──────────┴──────────────┴──────────────┴───────────┴──────┘

Komendy:
├── 0x01 - CMD_LOAD_GIF         [Załaduj animację GIF]
├── 0x02 - CMD_DISPLAY_TEXT     [Wyświetl tekst]
├── 0x03 - CMD_CLEAR_SCREEN     [Wyczyść ekran]
├── 0x04 - CMD_SET_BRIGHTNESS   [Ustaw jasność]
└── 0x05 - CMD_GET_STATUS       [Pobierz status]


┌─────────────────────────────────────────────────────────────────────────────┐
│                           CLASS STRUCTURE                                   │
└─────────────────────────────────────────────────────────────────────────────┘

class LEDMatrix {
    ┌─ Public API ─────────────────────────────────────────────────────┐
    │                                                                   │
    │  LEDMatrix(HardwareSerial &serial, uint8_t screenId = 1)         │
    │  void begin(uint32_t baudrate = 1000000)                         │
    │  void clearScreen()                                              │
    │  void setBrightness(uint8_t brightness)                          │
    │  void displayText(text, x, y, fontSize, r, g, b)                 │
    │  void loadGif(filename, x, y, width, height)                     │
    │  void setScreenId(uint8_t screenId)                              │
    │  uint8_t getScreenId() const                                     │
    │                                                                   │
    └───────────────────────────────────────────────────────────────────┘
    
    ┌─ Private Methods ─────────────────────────────────────────────────┐
    │                                                                   │
    │  void sendPacket(command, payload, payloadLength)                │
    │  uint8_t calculateChecksum(data, length)                         │
    │  void printPacket(command, payload, payloadLength)               │
    │                                                                   │
    └───────────────────────────────────────────────────────────────────┘
    
    ┌─ Private Members ─────────────────────────────────────────────────┐
    │                                                                   │
    │  HardwareSerial* _serial                                          │
    │  uint8_t _screenId                                                │
    │                                                                   │
    └───────────────────────────────────────────────────────────────────┘
}


┌─────────────────────────────────────────────────────────────────────────────┐
│                          USAGE EXAMPLES                                     │
└─────────────────────────────────────────────────────────────────────────────┘

┌─ Example 1: Basic Usage ──────────────────────────────────────────────────┐
│                                                                             │
│  #include "LEDMatrix.h"                                                    │
│                                                                             │
│  LEDMatrix matrix(Serial1);                                                │
│                                                                             │
│  void setup() {                                                            │
│      matrix.begin(1000000);                                                │
│      matrix.clearScreen();                                                 │
│      matrix.displayText("HELLO", 0, 0, 2, 255, 255, 0);                   │
│  }                                                                          │
│                                                                             │
└─────────────────────────────────────────────────────────────────────────────┘

┌─ Example 2: Color Animation ───────────────────────────────────────────────┐
│                                                                             │
│  uint8_t hue = 0;                                                          │
│                                                                             │
│  void loop() {                                                             │
│      uint8_t r = 255 * sin(hue * PI / 180);                                │
│      uint8_t g = 255 * sin((hue + 120) * PI / 180);                        │
│      uint8_t b = 255 * sin((hue + 240) * PI / 180);                        │
│                                                                             │
│      matrix.displayText("RAINBOW", 0, 0, 2, r, g, b);                      │
│                                                                             │
│      hue = (hue + 5) % 360;                                                │
│      delay(50);                                                            │
│  }                                                                          │
│                                                                             │
└─────────────────────────────────────────────────────────────────────────────┘

┌─ Example 3: GIF Loading ───────────────────────────────────────────────────┐
│                                                                             │
│  void setup() {                                                            │
│      matrix.begin(1000000);                                                │
│      matrix.setBrightness(80);                                             │
│      matrix.loadGif("anim/1.gif", 0, 0, 96, 96);                          │
│  }                                                                          │
│                                                                             │
└─────────────────────────────────────────────────────────────────────────────┘


┌─────────────────────────────────────────────────────────────────────────────┐
│                          HARDWARE CONNECTIONS                               │
└─────────────────────────────────────────────────────────────────────────────┘

    ESP32                    LED Matrix
    ────                     ──────────
    
    GPIO 17 (TX)  ──────────>  RX
    GND           ──────────>  GND
    VIN (5V)      ──────────>  VIN (opcjonalnie)
    
    Baudrate: 1000000 bps (1 Mbps)
    Serial: HardwareSerial (Serial1)


┌─────────────────────────────────────────────────────────────────────────────┐
│                          FILE STATISTICS                                    │
└─────────────────────────────────────────────────────────────────────────────┘

┌──────────────────────┬──────────┬────────────┬────────────────────────┐
│ File                 │ Lines    │ Functions  │ Description            │
├──────────────────────┼──────────┼────────────┼────────────────────────┤
│ LEDMatrix.h          │ ~100     │ 8          │ Header file            │
│ LEDMatrix.cpp        │ ~200     │ 7          │ Implementation         │
│ TestLEDMatrix.ino    │ ~150     │ 2          │ Full test              │
│ SimpleDemo.ino       │ ~80      │ 2          │ Simple demo            │
│ AdvancedDemo.ino     │ ~200     │ 5          │ Advanced demo          │
│ LEDMatrix_Standalone │ ~350     │ 10         │ Standalone project     │
├──────────────────────┼──────────┼────────────┼────────────────────────┤
│ TOTAL                │ ~1080    │ 34         │ Complete library       │
└──────────────────────┴──────────┴────────────┴────────────────────────┘


┌─────────────────────────────────────────────────────────────────────────────┐
│                          FEATURES SUMMARY                                   │
└─────────────────────────────────────────────────────────────────────────────┘

✅ Wyświetlanie tekstu z konfigurowalnymi parametrami
✅ Ładowanie i odtwarzanie animacji GIF
✅ Czyszczenie ekranu
✅ Kontrola jasności (0-100%)
✅ Debug i logowanie pakietów
✅ Suma kontrolna XOR
✅ Obsługa wielu rozmiarów czcionek
✅ Pełna kontrola kolorów RGB
✅ Automatyczne zarządzanie protokołem
✅ Przykłady użycia (3 projekty)
✅ Pełna dokumentacja (4 pliki)
✅ Projekt standalone


┌─────────────────────────────────────────────────────────────────────────────┐
│                          LICENSE & VERSION                                  │
└─────────────────────────────────────────────────────────────────────────────┘

License:  MIT License
Version:  1.0.0
Author:   Generated
Year:     2024

═══════════════════════════════════════════════════════════════════════════════
                            READY TO USE! 🚀
═══════════════════════════════════════════════════════════════════════════════

